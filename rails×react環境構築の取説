
Docker-composeを使って、railsとreactの環境構築を行う方法


# ファイルが一通り完成したら、以下のコマンドでDockerコンテナをビルドする
$ docker-compose build


# ビルドしたDockerコンテナを以下のコマンドでバッググラウンド起動する
$ docker-compose up -d


# 以下のコマンドで、Dockerコンテナ内のrailsフレームワークを新規作成する
$ docker-compose run --rm api rails new (アプリ名) --force --database=mysql --api


# railsを新規作成したら、config/database.ymlを以下のように編集する
〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜
default: &default
  adapter: mysql2
  encoding: utf8mb4
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: root
  password: password # デフォルトだと空欄になっているので変更
  host: db # デフォルトだとlocalhostになっているので変更

development:
  <<: *default
  database: myapp_development

test:
  <<: *default
  database: myapp_test

production:
  <<: *default
  database: <%= ENV["DATABASE_NAME"] %>
  username: <%= ENV["DATABASE_USERNAME"] %>
  password: <%= ENV["DATABASE_PASSWORD"] %>  
　host: <%= ENV["DATABASE_HOST"] %>
〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜〜

# database.yml編集後、再びコンテナをリビルドする
(環境が変わった、今まで動かしてたものが動かなくなったら、とりあえずコンテナのリビルドをやってみよう)
$ docker-compose build


# 起動したDockerコンテナ内で、環境開発用のデータベースを作る。以下のコマンドを入力する
docker-compose run --rm api rails db:migrate


# 起動確認。ローカルホストにネット検索をかける
localhost:3000


